[buildout]
# Used to code-analysis:
extends = 
   https://raw.githubusercontent.com/plone/plone.app.robotframework/master/versions.cfg

parts +=
    code-analysis
    csslint
    jshint
    jscs
    zptlint
    tslint
    code-analysis-coverage
    coverage



[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
multiprocessing = True
jenkins = False
directory =
    ${buildout:directory}/src
pre-commit-hook = True
# JS
jshint = True
jshint-bin = ${buildout:bin-directory}/jshint
jshint-suppress-warnings = False
jscs = True
jscs-bin = ${buildout:bin-directory}/jscs
jscs-exclude =
    ${buildout:directory}/dev/bower_components
    ${buildout:directory}/node_modules
# CSS
csslint = True
csslint-bin = ${buildout:bin-directory}/csslint
# ZPT
zptlint = True
zptlint-bin = ${buildout:bin-directory}/zptlint
# TS
tslint = True
tslint-bin = ${buildout:directory}/bin/tslint
tslint-exclude = ${:jscs-exclude}
# Conventions
clean-lines = True
clean-lines-exclude = ${:jscs-exclude}
# i18n
find-untranslated = True
i18ndude-bin = ${buildout:bin-directory}/i18ndude
return-status-codes = False
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg,*.cpy,*.vpy,overrides
flake8-ignore = E501

check-manifest = True

[node]
recipe = gp.recipe.node
npms = csslint jshint jscs tslint
scripts = csslint jshint jscs tslint

[csslint]
recipe = gp.recipe.node
npms = csslint
scripts = csslint

[jshint]
recipe = gp.recipe.node
npms = jshint
scripts = jshint

[jscs]
recipe = gp.recipe.node
npms = jscs
scripts = jscs

[zptlint]
recipe = zc.recipe.egg:scripts
egg = zptlint

[tslint]
recipe = gp.recipe.node
npms = tslint
script = tslint

# -----------------------------------------------------------------------------
# JENKINS TEST COVERAGE
# -----------------------------------------------------------------------------
# Creates a "jenkins-test-coverage" script in the bin directory of the buildout
# that runs a code coverage analysis and creates a report in an XML format that
# Jenkins can read and process. There is no need to run "bin/jenkins-test"
# before
[code-analysis-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    # Remove old results
    echo "Erase old coverage results."
    bin/coverage erase
    # Collect test coverage results for all packages
    echo "Run test coverage analysis for all packages."
    DIRECTORIES="${code-analysis:directory}"
    for pkgdir in $DIRECTORIES
    do
        # Runs a code coverage analysis on top of the "jenkins-test" script for
        # all packages. The data will be collected in a ".coverage" output file
        # in the buildout directory.
        echo "Analyse $pkgdir"
        bin/coverage run -p --source=$pkgdir bin/test --all
    done
    echo "Create test coverage report."
    # Combine all package analysis
    bin/coverage combine
    # Generates a "coverage.xml" file that Jenkins can read and process from the
    # ".coverage" file that the coverage report created.
    bin/coverage xml -i -o ${buildout:directory}/parts/code-analysis/coverage.xml
    echo "Test coverage report finished."
output = ${buildout:directory}/bin/code-analysis-coverage
mode = 755

[coverage]
recipe = zc.recipe.egg
eggs = coverage
interpreter = ${buildout:directory}/bin/zopepy

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

[versions]
flake8 = 2.4.1
gp.recipe.node = 0.12.7.1
mccabe = 0.3.1
plone.recipe.codeanalysis = 2.1
pyflakes = 0.8.1
zptlint = 0.2.4
check-manifest = 0.25
python-archive = 0.2
zc.recipe.cmmi = 1.3.6
flake8-blind-except = 0.1.0
flake8-coding = 1.1.1
flake8-debugger = 1.4.0
flake8-deprecated = 0.1
flake8-isort = 0.2
flake8-pep3101 = 0.2
flake8-plone-api = 0.6
flake8-plone-hasattr = 0.1
flake8-print = 1.6.1
flake8-quotes = 0.0.1
flake8-string-format = 0.2.1
flake8-todo = 0.4
isort = 4.2.2

